/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  BatchPrecompileInterface,
  BatchPrecompileInterfaceInterface,
} from "../BatchPrecompileInterface";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "callData",
        type: "bytes[]",
      },
      {
        internalType: "uint64[]",
        name: "gasLimit",
        type: "uint64[]",
      },
    ],
    name: "batchAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "callData",
        type: "bytes[]",
      },
      {
        internalType: "uint64[]",
        name: "gasLimit",
        type: "uint64[]",
      },
    ],
    name: "batchSome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "callData",
        type: "bytes[]",
      },
      {
        internalType: "uint64[]",
        name: "gasLimit",
        type: "uint64[]",
      },
    ],
    name: "batchSomeUntilFailure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "SubcallFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "SubcallSucceeded",
    type: "event",
  },
] as const;

export class BatchPrecompileInterface__factory {
  static readonly abi = _abi;
  static createInterface(): BatchPrecompileInterfaceInterface {
    return new utils.Interface(_abi) as BatchPrecompileInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchPrecompileInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BatchPrecompileInterface;
  }
}
